#!/bin/sh
#
# ancistrus
#
# Netgear's D7000 Nighthawk Router Experience Distributed Project
#
# https://github.com/negan07/ancistrus
#
# License: GPLv2
#
#
# Receive script: prepare debug environment on running router.
#
# Usage: $0 <core> <ko> <qos> <ssh> <www> <del> <*anyfiledir*>
#
# An http(s), or (s)ftp server must be run on local i386 host.
# On local host i386 machine it must be placed into http(s) or (s)ftp root server dir $DEBUG_DIR .
# On router it must be placed into ramfs $RDIR routerdir.
# https or sftp server must have a valid pem cert: Common Name (CN) must be $ADDR .
# https of sftp pem cert can be created with:
# sudo openssl req -new -x509 -keyout cert.pem -out cert.pem -days 365 -nodes
#
# telnet the router:
# cd $RDIR
# curl -f -s -k -O ${SERVER}://${ADDR}/${THISONE}
# chmod 755 $THISONE
# export LD_LIBRARY_PATH=$DBGDIR
# Files are located in $DBGDIR .
#

NAME=anc
CGI=${NAME}.cgi
THISONE=receive
SERVER=https								# kind of server: http or ftp
ADDR=192.168.0.7							# local host ip (development pc machine i386)
RDIR=/tmp/etc								# this script location
WWW=/www.eng								# www dir
DBGDIR=${RDIR}/${NAME}dbg						# debug dir
BINLIST="profile libscnvram.so $NAME led.sh guiinfo.sh"			# core main files
KINITLIST="kernelprocskill.sh printserverkill.sh Kopt.sh"		# core kinit files
SINITLIST="Sopt.sh"							# core sinit files
FINITLIST="Fopt.sh"							# core fw services
CINITLIST=""								# core schedule services
PRELIST="rc_disable_pre debug_mode_pre"					# core pre files
POSTLIST="wan_post schedule_post wlan_post firewall_post"		# core post files
SERVLIST="apple check_conn check_fw dnrd dnshj iserver led_ctrl ntp potcounter printk schedule show_mem_log syslogd xCloud" # inhibit services
WWWMAINLIST="top.js linux.js top.html adv_index.htm GPL_rev1.htm"	# main webpages
WWWCSSLIST="top.css"							# main css
WWWLIST="${NAME}_index.htm ${NAME}_home.htm ${NAME}_help.htm ${NAME}_editfile.htm ${NAME}_run.htm ${NAME}.js ${NAME}_dsltweak.htm ${NAME}_inhibit.htm ${NAME}_sched.htm ${NAME}_pers.htm ${NAME}_utils.htm"
KOLIST="sch_fq_codel.ko act_ipt.ko cls_flow.ko sch_hfsc.ko"		# kernel modules
QOSLIST="functions.qos legacy_funcs.qos qdisc_funcs.qos qos_funcs.qos qos-sqm.conf rc_qos"	# qos scripts and configs
SSHLIST="rc_ssh sshd_config sshd ssh-keygen scp"			# openssh bins scripts and configs
DSLLIBLIST="libbcm_crc.so libseltctl.so libbcm_flashutil.so"		# xdslctl shared libs
DSLKOLIST="adsldd.ko pktrunner.ko pktflow.ko bcmxtmcfg.ko bcmxtmrtdrv.ko"			# dsl kernel modules


DIRMAKE() {								# create the work bindir
mkdir -p -m 0755 $DBGDIR > /dev/null 2>&1
}

THISLNK() {								# create a symlink to this
ln -sf ${RDIR}/${THISONE} ${DBGDIR}/${THISONE} > /dev/null 2>&1
}

GET() {									# www get a file from the $ADDR server
rm -f $1
curl -f -s -k -O ${SERVER}://${ADDR}/${1} > /dev/null 2>&1
	if [ $? -ne 0 ]; then
	echo "$1 not found"
	else
	chmod 755 $1 > /dev/null 2>&1
	fi
}

GETLIST() {								# www get list of files from the $ADDR server to $DBGDIR dir
DIRMAKE
cd $DBGDIR
	for I in $*
	do
	GET $I
	done
THISLNK
}

[ $# -ne 1 ] && echo "Usage: $0 <core> <ko> <qos> <ssh> <www> <dsldrv> <del> <<delwww> <deldsldrv> *anyfiledir*>" && exit 1

export LD_LIBRARY_PATH=$DBGDIR

	case $1 in
	core)
	for G in $BINLIST $KINITLIST $SINITLIST $FINITLIST $CINITLIST $PRELIST $POSTLIST; do GETLIST $G; done
	for D in rcS.d rc.pre rc.post rc.fw rc.sch; do mkdir -p -m 0755 ${DBGDIR}/init.d/${D} > /dev/null 2>&1; done
	mv -f $KINITLIST $SINITLIST $FINITLIST $CINITLIST ${DBGDIR}/init.d/
	mv -f *_pre ${DBGDIR}/init.d/rc.pre/
	mv -f *_post ${DBGDIR}/init.d/rc.post/
	for P in $SERVLIST; do ln -sf rc_disable_pre ${DBGDIR}/init.d/rc.pre/${P}_pre; done
	I=1; for K in $KINITLIST; do ln -sf ../$K ${DBGDIR}/init.d/rcS.d/K0${I}${K}; let I++; done
	J=1; for S in $SINITLIST; do ln -sf ../$S ${DBGDIR}/init.d/rcS.d/S0${J}${S}; let J++; done
	L=1; for F in $FINITLIST; do ln -sf ../$F ${DBGDIR}/init.d/rc.fw/F0${L}${F}; let L++; done
	M=1; for C in $CINITLIST; do ln -sf ../$C ${DBGDIR}/init.d/rc.sch/C0${M}${C}; let M++; done
	ln -sf ${DBGDIR}/${NAME} ${RDIR}/rc_apps > /dev/null 2>&1
	[ ! -f ${RDIR}/profile ] && mv -f ${DBGDIR}/profile ${RDIR}/
	;;
	ko)
	GETLIST $KOLIST
	;;
	qos)
	GETLIST $QOSLIST
	;;
	ssh)
	cp -f ${RDIR}/sshd_config ${RDIR}/sshd_config.old > /dev/null 2>&1
	GETLIST $SSHLIST
	mv -f ${DBGDIR}/sshd_config ${RDIR}
	ln -sf ${DBGDIR}/rc_ssh ${DBGDIR}/init.d/rc.fw/F10ssh
	;;
	www)
	for G in $BINLIST $WWWMAINLIST $WWWCSSLIST $WWWLIST; do GETLIST $G; done	
	mkdir -p -m 0755 ${DBGDIR}${WWW}
	mv -f $WWWMAINLIST $WWWCSSLIST $WWWLIST ${DBGDIR}${WWW}/
	for F in ${WWWMAINLIST}; do [ -f ${WWW}/${F}.orig ] && continue; mv -f ${WWW}/${F} ${WWW}/${F}.orig; ln -sf ${DBGDIR}${WWW}/${F} ${WWW}/${F}; done
	for F in ${WWWCSSLIST}; do [ -f ${WWW}/style/${F}.orig ] && continue; mv -f ${WWW}/style/${F} ${WWW}/style/${F}.orig; ln -sf ${DBGDIR}${WWW}/${F} ${WWW}/style/${F}; done
	for F in ${WWWLIST}; do [ -f ${WWW}/${F} ] && continue; ln -sf ${DBGDIR}${WWW}/${F} ${WWW}/${F}; done
	ln -sf ${DBGDIR}/${NAME} ${RDIR}/${CGI} > /dev/null 2>&1
	[ ! -f ${WWW}/${CGI} ] && ln -sf ${RDIR}/${CGI} ${WWW}/${CGI} > /dev/null 2>&1
	[ ! -f ${WWW}/ancdslinfo ] && ln -sf /tmp/ancdslinfo ${WWW}/ancdslinfo > /dev/null 2>&1
	[ ! -f ${WWW}/ssh.zip ] && ln -sf /tmp/ssh.zip ${WWW}/ssh.zip > /dev/null 2>&1
	[ ! -f ${WWW}/opkgstatus ] && ln -sf /usr/lib/opkg/status ${WWW}/opkgstatus > /dev/null 2>&1
	[ ! -f ${WWW}/opkglist ] && ln -sf /tmp/opkg/lists/ancistrus-arm-D7000 ${WWW}/opkglist > /dev/null 2>&1
	[ ! -f ${WWW}/opkglistupgr ] && ln -sf /tmp/opkg/list-upgradable ${WWW}/opkglistupgr > /dev/null 2>&1
	;;
	dsldrv)
	GETLIST $DSLLIBLIST $DSLKOLIST adsl_phy.bin xdslctl.bin
	for L in ${DSLLIBLIST}; do [ ! -f /lib/${L}.orig ] && mv -f /lib/${L} /lib/${L}.orig; mv -f $L /lib/; done
	for M in ${DSLKOLIST}; do [ ! -f /lib/modules/${M}.orig ] && mv -f /lib/modules/${M} /lib/modules/${M}.orig; mv -f $M /lib/modules/; done
	[ ! -f /etc/adsl/adsl_phy.bin.orig ] && mv -f /etc/adsl/adsl_phy.bin /etc/adsl/adsl_phy.bin.orig && mv -f adsl_phy.bin /etc/adsl/
	[ ! -f /usr/etc/adsl/adsl_phy.bin.orig ] && mv -f /usr/etc/adsl/adsl_phy.bin /usr/etc/adsl/adsl_phy.bin.orig && mv -f adsl_phy.bin /usr/etc/adsl/
	[ ! -f /usr/sbin/xdslctl.bin.orig ] && mv -f /usr/sbin/xdslctl.bin /usr/sbin/xdslctl.bin.orig && mv -f xdslctl.bin /usr/sbin/
	sync
	echo "now reboot"
	;;
	del)
	cd $RDIR
	rm -rf $DBGDIR
	pidof sshd > /dev/null 2>&1 || rm -rf /var/ssh
	[ -f ${RDIR}/sshd_config.old ] && mv -f ${RDIR}/sshd_config.old ${RDIR}/sshd_config > /dev/null 2>&1
	[ -x /usr/sbin/${NAME} ] && ln -sf /usr/sbin/${NAME} ${RDIR}/rc_apps > /dev/null 2>&1 || ln -sf /usr/sbin/rc_app/rc_apps ${RDIR}/rc_apps > /dev/null 2>&1
	;;
	delwww)
	cd $RDIR
	rm -rf ${DBGDIR}${WWW}
	for F in ${WWWMAINLIST}; do [ -f ${WWW}/${F}.orig ] && mv -f ${WWW}/${F}.orig ${WWW}/${F}; done
	for F in ${WWWCSSLIST}; do [ -f ${WWW}/style/${F}.orig ] && mv -f ${WWW}/style/${F}.orig ${WWW}/style/${F}; done
	for F in ${WWWLIST}; do rm -f ${WWW}/${F}; done
	rm -f ${WWW}/ssh.zip ${WWW}/opkg* ${WWW}/anc*
	;;
	deldsldrv)
		if [ -f /lib/modules/adsldd.ko.orig ]; then
		for L in ${DSLLIBLIST}; do rm -f /lib/${L}; done
		for M in ${DSLKOLIST}; do [ -f /lib/modules/${M}.orig ] && mv -f /lib/modules/${M}.orig /lib/modules/${M}; done
		[ -f /etc/adsl/adsl_phy.bin.orig ] && mv -f /etc/adsl/adsl_phy.bin.orig /etc/adsl/adsl_phy.bin
		[ -f /usr/sbin/xdslctl.bin.orig ] && mv -f /usr/sbin/xdslctl.bin.orig /usr/sbin/xdslctl.bin
		sync
		echo "now reboot"
		fi
	;;
	*)
	DIRMAKE
	cd $DBGDIR
	GET $1
	FILEABS=`echo "$1" | grep ".zip"`
	[ "${FILEABS}" = "$1" ] && unzip $1 && rm -f $1 && chmod -R 755 $FILEABS > /dev/null 2>&1
	THISLNK
	;;
	esac
exit 0
